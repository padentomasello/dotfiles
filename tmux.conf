# Reason: 'Ctrl-a' is easier to reach than 'Ctrl-b'
set -g prefix C-a
unbind C-b

# command delay? We don't want that, make it short
set -sg escape-time 1

# Set the numbering of windows to go from 1 instead
# of 0 - silly programmers :|
set-option -g base-index 1
setw -g pane-base-index 1


# Allow us to reload our Tmux configuration while
# using Tmux
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# Getting interesting now, we use the vertical and horizontal
# symbols to split the screen
bind | split-window -h
bind - split-window -v
#
#
#
#
#
set-option -g default-terminal "xterm-256color-italic"
set -ga terminal-overrides ',xterm-256color-italic:Tc'
#set-option -g default-command "reattach-to-user-namespace -l zsh"
#set-option -g default-shell /bin/zsh

#set -sg escape-time 1

##Mouse works as expected
##setw -g mode-mouse on
##set -g mouse-select-pane on
##set -g mouse-resize-pane on
##set -g mouse-select-window on
#set -g mouse on

setw -g monitor-activity on
set -g visual-activity on

set -g mode-keys vi
set -g history-limit 10000

## y and p as in vim
#bind Escape copy-mode
##unbind p
##bind p paste-buffer
##bind -t vi-copy 'v' begin-selection
##bind -t vi-copy 'y' copy-selection
## bind -t vi-copy 'Space' halfpage-down
## bind -t vi-copy 'Bspace' halfpage-up

##bind C-c choose-buffer "run \"tmux save-buffer -b %% - | xclip -i -sel clipboard\" \; run \" tmux display \\\"Clipboard \(+\) filled with: $(tmux save-buffer -b %1 - | dd ibs=1 obs=1 status=noxfer count=80 2> /dev/null)... \\\" \" "
### C-v: copy from + clipboard.
##bind C-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer" \; run "tmux display \"Copied from \(+\) $(xclip -o -sel clipboard | dd ibs=1 obs=1 status=noxfer count=80 2> /dev/null)... \""
###
### # C-d: save into selection clipboard (*). With preselection.
##bind C-d choose-buffer "run \"tmux save-buffer -b %% - | xclip -i\" \; run \" tmux display \\\"Clipboard \(*\) filled with: $(tmux save-buffer -b %1 - | dd ibs=1 obs=1 status=noxfer count=80 2> /dev/null)... \\\" \" "
### # C-f: copy from * clipboard.
##bind C-f run "tmux set-buffer \"$(xclip -o)\"; tmux paste-buffer" \; run "tmux display \"Copied from \(*\) $(xclip -o | dd ibs=1 obs=1 status=noxfer count=80 2> /dev/null)... \""
##


 #moving between panes with vim movement keys
#bind h select-pane -L
#bind j select-pane -D
#bind k select-pane -U
#bind l select-pane -R

# moving between windows with vim movement keys
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+
## Smart pane switching with awareness of vim splits
## # See: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

bind-key k select-pane -U
bind-key C-k select-pane -U
bind-key j select-pane -D
bind-key C-j select-pane -D
bind-key Space copy-mode
bind-key C-Space copy-mode


# resize panes with vim movement keys
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5


## ----------------------
    # set some pretty colors
    # ----------------------
    # set pane colors - hilight the active pane
    set-option -g pane-border-fg colour235 #base02
    set-option -g pane-active-border-fg colour240 #base01

    # colorize messages in the command line
    set-option -g message-bg black #base02
    set-option -g message-fg brightred #orange

    # ----------------------
    # Status Bar
    # -----------------------
    set-option -g status on                # turn the status bar on
    #set -g status-utf8 on                  # set utf-8 for the status bar
    set -g status-interval 5               # set update frequencey (default 15 seconds)
    set -g status-justify centre           # center window list for clarity
    # set-option -g status-position top    # position the status bar at top of screen

    # visual notification of activity in other windows
    setw -g monitor-activity on
    set -g visual-activity on

    # set color for status bar
    set-option -g status-bg colour235 #base02
    set-option -g status-fg yellow #yellow
    set-option -g status-attr dim 

    # set window list colors - red for active and cyan for inactive
    set-window-option -g window-status-fg brightblue #base0
    set-window-option -g window-status-bg colour236 
    set-window-option -g window-status-attr dim

    set-window-option -g window-status-current-fg brightred #orange
    set-window-option -g window-status-current-bg colour236 
    set-window-option -g window-status-current-attr bright

    # show host name and IP address on left side of status bar
    set -g status-left-length 70
    set -g status-left "#[fg=green]: #h : #[fg=brightblue]#(curl icanhazip.com) #[fg=yellow]#(ifconfig en0 | grep 'inet ' | awk '{print \"en0 \" $2}') #(ifconfig en1 | grep 'inet ' | awk '{print \"en1 \" $2}') #[fg=red]#(ifconfig tun0 | grep 'inet ' | awk '{print \"vpn \" $2}') "

    # show session name, window & pane number, date and time on right side of
    # status bar
    set -g status-right-length 60
    set -g status-right "#[fg=blue]#S #I:#P #[fg=yellow]:: %d %b %Y #[fg=green]:: %l:%M %p :: #(date -u | awk '{print $4}')::"


# List of plugins
# set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'tmux-plugins/tmux-sensible'
#
# # Other examples:
# # set -g @plugin 'github_username/plugin_name'
# # set -g @plugin 'git@github.com/user/plugin'
# # set -g @plugin 'git@bitbucket.com/user/plugin'
#
# # Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
set -g @plugin 'tmux-plugins/tmux-copycat'
run '~/.tmux/plugins/tpm/tpm'
